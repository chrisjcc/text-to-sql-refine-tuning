# Evaluation settings
split: validation  # or test
batch_size: 8
load_in_4bit: false

# Checkpoints to evaluate (list of paths)
checkpoint_paths: []  # Empty means use final_model

# Metrics to compute
metrics:
  exact_match: true
  token_accuracy: true
  structural_similarity: true
  keyword_f1: true
  complexity_analysis: true
  execution_accuracy: false  # Requires DB connection

# Output
output_dir: ./evaluation_results
save_per_sample: true
save_report: true

# Analysis
analyze_errors: true
error_analysis_samples: 20
stratify_by_complexity: true

# Legacy rubric settings (kept for backwards compatibility)
rubric:
  type: sql_validation

  # Scoring weights
  weights:
    syntax: 0.4
    keywords: 0.3
    format: 0.3

  # SQL keyword list
  sql_keywords:
    - SELECT
    - FROM
    - WHERE
    - JOIN
    - LEFT JOIN
    - RIGHT JOIN
    - INNER JOIN
    - OUTER JOIN
    - GROUP BY
    - ORDER BY
    - HAVING
    - INSERT
    - UPDATE
    - DELETE
    - CREATE
    - DROP
    - ALTER
    - LIMIT
    - OFFSET
    - UNION
    - DISTINCT
    - AS
    - ON

  # Parser settings
  parser:
    extract_code_blocks: true
    clean_whitespace: true
    max_sql_length: 2048
    min_sql_length: 10

  # Validation settings
  validation:
    check_syntax: true
    strict_mode: false  # If true, syntax errors return 0.0
    normalize_sql: true
